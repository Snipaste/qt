/****************************************************************************
**
** Copyright (C) 2020 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: https://www.gnu.org/licenses/fdl-1.3.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!

//! [type-conversions]
Many of Qt's basic data types, such as QString, QPoint, or QImage, provide
conversions to and from the native equivalent types.
//! [type-conversions]

//! [native-interface-compat-warning]
There are no source or binary compatibility guarantees for the
native interface APIs, meaning that an application using these
interfaces is only guaranteed to work with the Qt version it was
developed against.
//! [native-interface-compat-warning]

//! [native-interface-blurb]
The interfaces live in the QNativeInterface namespace, and cover use-cases
such as accessing underlying native handles, adopting existing native
handles, or providing platform specific APIs.
//! [native-interface-blurb]

//! [native-interface-handle-access-example]
For example, to access the underlying NSOpenGLContext of an QOpenGLContext
on \macos, via the QNativeInterface::QCocoaGLContext native interface:

\code
    using namespace QNativeInterface;
    if (auto *cocoaGLContext = glContext->nativeInterface<QCocoaGLContext>())
        [cocoaGLContext->nativeContext() makeCurrentContext];
\endcode
//! [native-interface-handle-access-example]

*/
