/****************************************************************************
**
** Copyright (C) 2021 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: https://www.gnu.org/licenses/fdl-1.3.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \page qt-intro.html
    \title What's New in Qt 6
    \brief Qt 6 features and its benefits.

    Qt 6 lets you develop applications with intuitive user interfaces for
    multiple devices and platforms, faster than ever before. Development is
    easy with \b{Qt Creator}, letting you design, code, test, and deploy Qt
    applications. Qt 6 is highly compatible with Qt 5. Developers of Qt 5
    applications can move seamlessly to Qt 6 while retaining applications'
    functionality.

    \section1 Developing User Interfaces with Qt

    Qt offers two UI frameworks for developers: \b{Qt Widgets} and \b{Qt Quick}.
    \l{Qt Widgets} is cross-platform and tightly integrates with desktop
    look and feel. \l{Qt Quick} UIs are dynamic with fluid animations and are
    optimal for touch interfaces. You can implement widget UIs in C++ and you
    can implement Qt Quick UIs declaratively with QML and JavaScript. The
    \l{User Interfaces} page compares both Qt Quick and Qt Widgets UIs.

    \section2 Designing UIs

    \l{Qt Quick Designer} lets you design UIs from within Qt Creator. You can
    import 2D and 3D assets, animate components, and create layouts. Testing
    the designs is possible through a live preview on devices are through
    an online browser.

    If you only design UIs and don't need the developer tools and functions,
    you can use \l{Qt Design Studio Manual}{Qt Design Studio}. It enables you
    to define the look and feel of the UI from wireframe to final implementation
    with preset UI components. You can import UI design files from 2D and 3D
    tools to Qt Design Studio, which can turn them into code for developers.
    Qt Design Studio prototyping features bring your designs to life and
    simulate and validate interactions and dynamic behavior. You can test,
    preview, and fine-tune your designs to pixel-perfection live on the desktop
    or target device.

    \section1 Developing Applications

    \l{Qt Creator Manual}{Qt Creator} is a complete IDE for developing Qt
    applications. You can setup project files, code, debug, package, and
    deploy from within Qt Creator. You can configure either
    \l{Build with CMake}{CMake} or \l{qmake Manual}{qmake} to build
    projects when you create them using wizard templates.

    \section1 Cross-Platform Development

    Qt is cross-platform and you can deploy onto different devices and
    platforms. \l{Qt Creator Manual}{Qt Creator} has built-in project
    templates and kits for different platforms and devices. In addition,
    you can port Qt and create custom targets with
    \l{Qt Platform Abstraction}.

    \section1 Qt Essential and Qt Add-ons

    In Qt 6, the installation experience is easier and more flexible than
    before.The installation includes the \b{Qt Essentials} and a few of the most
    commonly used \b{Qt Add-Ons}. The Qt Add-Ons are moved outside of the main
    installation, but still available by running the installer. You can read the
    list of Qt modules in the \l{All Modules}{Qt Modules} page.

    \section1 Where To Go From Here

        \list
        \li \l{Getting Started with Qt}
        \li \l{Changes to Qt Modules in Qt 6}
        \endlist

    \section1 New Features by Qt Version

    \list
        \li \l{What's New in Qt 6.2}
        \li \l{What's New in Qt 6.1}
        \li \l{What's New in Qt 6.0}
    \endlist

*/
