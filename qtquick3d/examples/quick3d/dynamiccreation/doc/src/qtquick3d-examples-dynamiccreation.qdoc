/****************************************************************************
**
** Copyright (C) 2019 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: https://www.gnu.org/licenses/fdl-1.3.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \example dynamiccreation
    \ingroup quick3d-examples
    \title Qt Quick 3D - Dynamic Model Creation Example
    \brief Demonstrates dynamic model creation.

    This example demonstrates creating models dynamically in an application. 10 models are created
    dynamically at the start of the application, and more can be added or removed using the
    \e {Add Model} and \e {Remove Model} buttons.
    \image dynamiccreation-example.png

    \section1 Setting Up

    \section2 Spawner Node

    We are going to need a \l Node to hold the dynamically created models.

    \snippet dynamiccreation/main.qml spawner node
    \dots

    \section2 Startup

    We're creating 10 models at \c Component.onCompleted so the example shows something at startup.

    \snippet dynamiccreation/main.qml startup

    \section1 Dynamic Models

    \section2 Adding Models

    In order to add a new item to the scene, we first use the \l {Qt::createComponent}{Qt.createComponent}
    function to create a \l {Component} for our model. Then we use the component's
    \l {Component::createObject}{createObject} function to instantiate the item, passing in the
    position and scale as parameters.

    \snippet dynamiccreation/main.qml adding

    \section2 Removing Models

    Dynamically created models are removed simply by popping and destroying them from the instance
    stack.

    \snippet dynamiccreation/main.qml removing
*/
